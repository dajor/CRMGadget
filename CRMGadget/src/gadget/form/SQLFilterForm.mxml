<?xml version="1.0" encoding="utf-8"?>
<mx:Form
	creationComplete="init(); initValidate();"
	xmlns:mx="http://www.adobe.com/2006/mxml" paddingTop="0" paddingBottom="0">
	<mx:Script>
		<![CDATA[
			import gadget.dao.Database;
			import gadget.i18n.i18n;
			import gadget.service.PicklistService;
			import gadget.util.Relation;
			import gadget.util.StringUtils;
			import gadget.util.Utils;
			
			import mx.collections.ArrayCollection;
			import mx.controls.ComboBase;
			import mx.validators.NumberValidator;
			import mx.validators.Validator;
			
			[Bindable] public var filter:Object;
			[Bindable] public var criteria1:Object;
			[Bindable] public var criteria2:Object;
			[Bindable] public var criteria3:Object;
			[Bindable] public var criteria4:Object;
			[Bindable] public var criteria5:Object;
			[Bindable] public var criteria6:Object;
			[Bindable] private var isAscend:Boolean = true;
			[Bindable] private var filterConj1And:String = "and";
			[Bindable] private var filterConj2And:String = "and";
			[Bindable] private var filterConj3And:String = "and";
			[Bindable] private var orderBy:String = "asc";
			private var validator:Array = [];
			
			public function init():void {
				loadData();
				manageViewParamControl(filterOp1);
				manageViewParamControl(filterOp2);
				manageViewParamControl(filterOp3);
				manageViewParamControl(filterOp4);
				
			}
			
			private function initValidate():void{
				// parent
				var bindColumn:NumberValidator = new NumberValidator();
				bindColumn.source = bindFilterParam;
				bindColumn.property = "selectedIndex";
				bindColumn.lowerThanMinError = "This field is required.";
				bindColumn.minValue = 1;
				validator.push(bindColumn);
				
				// child
				var bindParameter:NumberValidator = new NumberValidator();
				bindParameter.source = bindFilterCol;
				bindParameter.property = "selectedIndex";
				bindParameter.lowerThanMinError = "This field is required.";
				bindParameter.minValue = 1;
				validator.push(bindParameter);
			}
			
			public function validate():Array {
				return validator;
			}
			
			private function loadData():void {
				
				if(filter) {
					
					bindAutoColumn();
					
					// *************************************** Criterial1 ***************************************
				
					// filterCol1.dataProvider = Utils.getColumns(filter.entity)
					filterCol1.dataProvider = Utils.getColumns(filter.entity_dest);
					filterCol1.selectedIndex = Utils.getComboColIndex(criteria2.column_name, filter.entity_dest);
					
					// filterOp1.dataProvider = Utils.operatorData
					filterOp1.dataProvider = Utils.operatorData;
					filterOp1.selectedIndex = Utils.getComboOpIndex(criteria2.operator);
					
					// filterParam1.text = criteria1.param_display;
					filterParam1.text = criteria2.param;
					cboFilterParam1.dataProvider = PicklistService.getPicklist(filter.entity_dest, criteria2.column_name);
					cboFilterParam1.selectedIndex = Utils.getComboParamIndex(criteria2.column_name, filter.entity_dest, criteria2.param);
					cboFilterParam1.labelField="label";
					
					// filterConj1.selectedValue = criteria1.conjunction == null? 'and' : criteria1.conjunction
					filterConj1And = criteria2.conjunction == "" ? 'and' : criteria2.conjunction
				
					// *************************************** Criterial2 ***************************************
					
					// filterCol2.dataProvider = Utils.getColumns(filter.entity_dest)
					filterCol2.dataProvider = Utils.getColumns(filter.entity_dest);
					filterCol2.selectedIndex = Utils.getComboColIndex(criteria3.column_name, filter.entity_dest);
					
					// filterOp2.dataProvider = Utils.operatorData
					filterOp2.dataProvider = Utils.operatorData;
					filterOp2.selectedIndex = Utils.getComboOpIndex(criteria3.operator);				
					
					// filterParam2.text = criteria2.param_display;
					filterParam2.text = criteria3.param;
					cboFilterParam2.dataProvider = PicklistService.getPicklist(filter.entity_dest, criteria3.column_name);
					cboFilterParam2.selectedIndex = Utils.getComboParamIndex(criteria3.column_name, filter.entity_dest, criteria3.param);
					cboFilterParam2.labelField="label";
					
					// filterConj2.selectedValue = criteria2.conjunction == null? 'and' : criteria2.conjunction
					filterConj2And = criteria3.conjunction == "" ? 'and' : criteria3.conjunction
				
					// *************************************** Criterial3 ***************************************
					
					// filterCol3.dataProvider = Utils.getColumns(filter.entity_dest)
					filterCol3.dataProvider = Utils.getColumns(filter.entity_dest);
					filterCol3.selectedIndex = Utils.getComboColIndex(criteria4.column_name, filter.entity_dest);
					
					// filterOp3.dataProvider = Utils.operatorData
					filterOp3.dataProvider = Utils.operatorData;
					filterOp3.selectedIndex = Utils.getComboOpIndex(criteria4.operator);
					
					// filterParam3.text = criteria3.param_display;
					filterParam3.text = criteria4.param;
					cboFilterParam3.dataProvider = PicklistService.getPicklist(filter.entity_dest, criteria4.column_name);
					cboFilterParam3.selectedIndex = Utils.getComboParamIndex(criteria4.column_name, filter.entity_dest, criteria4.param);
					cboFilterParam3.labelField="label";
					
					// filterConj3.selectedValue = criteria3.conjunction == null? 'and' : criteria3.conjunction
					filterConj3And = criteria4.conjunction == "" ? 'and' : criteria4.conjunction
				
					// *************************************** Criterial4 ***************************************
					
					// filterCol4.dataProvider = Utils.getColumns(filter.entity_dest)
					filterCol4.dataProvider = Utils.getColumns(filter.entity_dest);
					filterCol4.selectedIndex = Utils.getComboColIndex(criteria5.column_name, filter.entity_dest);
					
					// filterOp4.dataProvider = Utils.operatorData
					filterOp4.dataProvider = Utils.operatorData;
					filterOp4.selectedIndex = Utils.getComboOpIndex(criteria5.operator);
					
					// filterParam4.text = criteria4.param_display;
					filterParam4.text = criteria5.param;
					cboFilterParam4.dataProvider = PicklistService.getPicklist(filter.entity_dest, criteria5.column_name);
					cboFilterParam4.selectedIndex = Utils.getComboParamIndex(criteria5.column_name, filter.entity_dest, criteria5.param);
					cboFilterParam4.labelField="label";
				
					// *************************************** Order By ***************************************
					
					// filterCol5.dataProvider = Utils.getColumns(filter.entity_dest)
					filterCol5.dataProvider = Utils.getColumns(filter.entity_dest);
					filterCol5.selectedIndex = Utils.getComboColIndex(criteria6.column_name, filter.entity_dest);
					orderBy = criteria6.param == "" ? 'asc' : criteria6.param;
					
				}
					
			}
			
			private function changeAction(event:Event):void{
				var currentComboBox:ComboBox = event.currentTarget as ComboBox;
				var object:Object = currentComboBox.selectedItem;
				var dataSource:ArrayCollection = PicklistService.getPicklist(object.entity, object.column);
				isPickList(object.type == "Picklist" && dataSource.length > 1 ? true : false, currentComboBox.id, dataSource);
			}
			
			private function operatorChangeHandler(event:Event):void {
				var operatorComboBox:ComboBox = event.currentTarget as ComboBox;
				manageViewParamControl(operatorComboBox);
			}
			
			private function manageViewParamControl(operatorComboBox:ComboBox):void {
				if( !Utils.isEmptyOrIsNotEmptyUnselected(operatorComboBox) ){
					if(operatorComboBox.id == "filterOp1"){
						filterParam1.visible = false;
						cboFilterParam1.visible = false;
					}else if(operatorComboBox.id == "filterOp2"){
						filterParam2.visible = false;
						cboFilterParam2.visible = false;
					}else if(operatorComboBox.id == "filterOp3"){
						filterParam3.visible = false;
						cboFilterParam3.visible = false;
					}else {
						filterParam4.visible = false;
						cboFilterParam4.visible = false;
					}
				}else{
					var colComboBox:ComboBox;
					if(operatorComboBox.id == "filterOp1"){
						colComboBox = filterCol1;
					}else if(operatorComboBox.id == "filterOp2"){
						colComboBox = filterCol2;
					}else if(operatorComboBox.id == "filterOp3"){
						colComboBox = filterCol3;
					}else {
						colComboBox = filterCol4;
					}	
					var object:Object = colComboBox.selectedItem;
					if(!object) {
						object = new Object();
						object.entity = null;
					}
					if(object.entity==null || object.column==null){
						isPickList(false, colComboBox.id, null);
						return;
					}
					var dataSource:ArrayCollection = PicklistService.getPicklist(object.entity, object.column);
					isPickList(object.type == "Picklist" && dataSource.length > 1 ? true : false, colComboBox.id, dataSource);
				}				
			}
			
			private function isPickList(show:Boolean, id:String, dataArray:ArrayCollection):void{
				var cboShow:ComboBox, selectedIndex:int=0;
				var bIsEmptyOrIsNotEmptyUnselected:Boolean;
				if(StringUtils.endsWith(id, "1")){
					bIsEmptyOrIsNotEmptyUnselected = Utils.isEmptyOrIsNotEmptyUnselected(filterOp1);
					filterParam1.text = criteria2 ? criteria2.param : "";
					filterParam1.visible = !show && bIsEmptyOrIsNotEmptyUnselected;
					cboShow = cboFilterParam1;
					selectedIndex = filter && criteria2 ? Utils.getComboParamIndex(criteria2.column_name, filter.entity_dest, criteria2.param) : 0;
				}else if(StringUtils.endsWith(id, "2")){
					bIsEmptyOrIsNotEmptyUnselected = Utils.isEmptyOrIsNotEmptyUnselected(filterOp2);
					filterParam2.text = criteria3 ? criteria3.param : "";
					filterParam2.visible = !show && bIsEmptyOrIsNotEmptyUnselected;
					cboShow = cboFilterParam2;
					selectedIndex = filter && criteria3 ? Utils.getComboParamIndex(criteria3.column_name, filter.entity_dest, criteria3.param) : 0;
				}else if(StringUtils.endsWith(id, "3")){
					bIsEmptyOrIsNotEmptyUnselected = Utils.isEmptyOrIsNotEmptyUnselected(filterOp3);
					filterParam3.text = criteria4 ? criteria4.param : "";
					filterParam3.visible = !show && bIsEmptyOrIsNotEmptyUnselected;
					cboShow = cboFilterParam3;
					selectedIndex = filter && criteria4 ? Utils.getComboParamIndex(criteria4.column_name, filter.entity_dest, criteria4.param) : 0;
				}else if(StringUtils.endsWith(id, "4")){
					bIsEmptyOrIsNotEmptyUnselected = Utils.isEmptyOrIsNotEmptyUnselected(filterOp4);
					filterParam4.text = criteria5 ? criteria5.param : "";
					filterParam4.visible = !show && bIsEmptyOrIsNotEmptyUnselected;
					cboShow = cboFilterParam4;
					selectedIndex = filter && criteria5 ? Utils.getComboParamIndex(criteria5.column_name, filter.entity_dest, criteria5.param) : 0;
				}
				cboShow.dataProvider = dataArray;
				cboShow.selectedIndex = selectedIndex;
				cboShow.visible = show && bIsEmptyOrIsNotEmptyUnselected;
			}
			
			private function bindAutoColumn():void {
				// bind column between child and parent
				bindFilterCol.dataProvider = Utils.getColumns(filter.entity_dest); // child column
				bindFilterParam.dataProvider = Utils.getColumns(filter.entity_src);	// parent column			
				if(criteria1 && criteria1.hasOwnProperty("column_name")) {
					bindFilterCol.selectedIndex = Utils.getComboColIndex(criteria1.column_name, criteria1.entity_dest);
					bindFilterParam.selectedIndex = Utils.getComboColIndex(criteria1.param, criteria1.entity_src);
				}else {
					var relation:Object = Relation.getRelation(filter.entity_dest,filter.entity_src);//one 2 many relation
					if(relation) {
						bindFilterCol.selectedIndex = Utils.getComboColIndex(relation.keySrc, relation.entitySrc);
						bindFilterParam.selectedIndex = Utils.getComboColIndex(relation.keyDest, relation.entityDest);
					}
				}
			}
			private function getOperationLabel(item:Object):String{
				return i18n._(item.label);
			}
			
		]]>
	</mx:Script>
	<mx:FormItem label="Binding">
		<mx:HBox>
			<mx:VBox>
				<mx:Label text="Parent" />
				<mx:ComboBox width="160" id="bindFilterParam" labelField="label" />
			</mx:VBox>
			<mx:VBox>
				<mx:Label text="" />
				<mx:Label text="equals" width="110" textAlign="center" />
			</mx:VBox>
			<mx:VBox>
				<mx:Label text="Child" />
				<mx:ComboBox width="160" id="bindFilterCol"/>
			</mx:VBox>
		</mx:HBox>
	</mx:FormItem>
	<mx:FormItem label="{i18n._('FILTER_FOMR_FORM_ITEM_CRITERIA1')}">
		<mx:HBox>
			<mx:ComboBox width="160" id="filterCol1" labelField="label" change="changeAction(event);" />
			<mx:ComboBox width="110" id="filterOp1" change="operatorChangeHandler(event)" labelFunction="{getOperationLabel}"/>
			<mx:TextInput includeInLayout="false" width="260" id="filterParam1"/>
			<mx:ComboBox includeInLayout="false" width="160" id="cboFilterParam1"/>
		</mx:HBox>
		<mx:HBox>
			<mx:RadioButtonGroup id="filterConj1" selectedValue="{filterConj1And}" />
			<mx:RadioButton groupName="filterConj1" value="and" label="{i18n._('FILTER_FORM_RADIO_BUTTON_AND')}" />
			<mx:RadioButton groupName="filterConj1" value="or" label="{i18n._('FILTER_FORM_RADIO_BUTTON_OR')}"  />
		</mx:HBox>
	</mx:FormItem>
	<mx:FormItem label="{i18n._('FILTER_FOMR_FORM_ITEM_CRITERIA2')}">
		<mx:HBox>
			<mx:ComboBox width="160" id="filterCol2" labelField="label" change="changeAction(event);" />
			<mx:ComboBox width="110" id="filterOp2" change="operatorChangeHandler(event)" labelFunction="{getOperationLabel}"/>
			<mx:TextInput includeInLayout="false" width="260" id="filterParam2"/>
			<mx:ComboBox includeInLayout="false" width="160" id="cboFilterParam2"/>
		</mx:HBox>
		<mx:HBox>
			<mx:RadioButtonGroup id="filterConj2" selectedValue="{filterConj2And}" />
			<mx:RadioButton groupName="filterConj2" value="and" label="{i18n._('FILTER_FORM_RADIO_BUTTON_AND')}" />
			<mx:RadioButton groupName="filterConj2" value="or" label="{i18n._('FILTER_FORM_RADIO_BUTTON_OR')}"  />
		</mx:HBox>
	</mx:FormItem>
	<mx:FormItem label="{i18n._('FILTER_FOMR_FORM_ITEM_CRITERIA3')}">
		<mx:HBox>
			<mx:ComboBox width="160" id="filterCol3" labelField="label" change="changeAction(event);" />
			<mx:ComboBox width="110" id="filterOp3" change="operatorChangeHandler(event)" labelFunction="{getOperationLabel}"/>
			<mx:TextInput includeInLayout="false" width="260" id="filterParam3"/>
			<mx:ComboBox includeInLayout="false" width="160" id="cboFilterParam3"/>
		</mx:HBox>
		<mx:HBox>
			<mx:RadioButtonGroup id="filterConj3" selectedValue="{filterConj3And}" />
			<mx:RadioButton groupName="filterConj3" value="and" label="{i18n._('FILTER_FORM_RADIO_BUTTON_AND')}" />
			<mx:RadioButton groupName="filterConj3" value="or" label="{i18n._('FILTER_FORM_RADIO_BUTTON_OR')}"  />
		</mx:HBox>
	</mx:FormItem>
	<mx:FormItem label="{i18n._('FILTER_FOMR_FORM_ITEM_CRITERIA4')}">
		<mx:HBox>
			<mx:ComboBox width="160" id="filterCol4" labelField="label" change="changeAction(event);" />
			<mx:ComboBox width="110" id="filterOp4" change="operatorChangeHandler(event)" labelFunction="{getOperationLabel}"/>
			<mx:TextInput includeInLayout="false" width="260" id="filterParam4"/>
			<mx:ComboBox includeInLayout="false" width="160" id="cboFilterParam4"/>
		</mx:HBox>
	</mx:FormItem>
	<mx:HRule width="100%" />
	<mx:FormItem label="{i18n._('GLOBAL_ORDER_BY')}">
		<mx:HBox>
			<mx:ComboBox width="160" id="filterCol5" labelField="label" />
			<mx:RadioButtonGroup id="sortType" selectedValue="{orderBy}" />
			<mx:RadioButton groupName="sortType" value="asc" label="{i18n._('GLOBAL_ASCENDING')}" />
			<mx:RadioButton groupName="sortType" value="desc" label="{i18n._('GLOBAL_DESCENDING')}" />
		</mx:HBox>
	</mx:FormItem>
</mx:Form>
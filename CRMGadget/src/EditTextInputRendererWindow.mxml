<?xml version="1.0" encoding="utf-8"?>
<mx:Window xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   xmlns:code="http://code.google.com/p/flexlib/"
		   xmlns:control="gadget.control.*"
		   resizable="false"
		   showFlexChrome="false" transparent="true" systemChrome="none"
		   width="400" height="270" title="{titleWindow}" initialize="initial()">
	<mx:Script>
		<![CDATA[
			import flashx.textLayout.operations.InsertTextOperation;
			import flashx.textLayout.operations.SplitParagraphOperation;
			
			import gadget.i18n.i18n;
			import gadget.util.ImageUtils;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.ButtonBar;
			import mx.events.ItemClickEvent;
			
			import spark.components.RichEditableText;
			import spark.events.TextOperationEvent;
			
			[Bindable] public var titleWindow:String;
			[Bindable] public var sourceText:String;
			public var changeListener:Function;
			
			private static const CANCEL_STR:String = i18n._('GLOBAL_CANCEL');
			private static const EDIT_STR:String = i18n._('GLOBAL_SAVE');
			
			
			private function initial():void{
				var buttonBar:ButtonBar = new ButtonBar();
				buttonBar.setStyle("right", "0");
				var buttons:ArrayCollection = new ArrayCollection();
				buttons.addItem({label: CANCEL_STR, icon:ImageUtils.cancelIcon});
				buttons.addItem({label: EDIT_STR, icon:ImageUtils.editIcon});
				buttonBar.dataProvider = buttons;
				buttonBar.addEventListener(ItemClickEvent.ITEM_CLICK, handleButtonBar);
				hboxButtonbar.addChild(buttonBar);
				
			}
			
			private function handleButtonBar(event:ItemClickEvent):void {
				if (event.label != CANCEL_STR) {
					changeListener(commandText.text);
				}
				this.close();
			}
			
			
			

			protected function commandText_changingHandler(e:TextOperationEvent):void
			{
				if(e.operation is InsertTextOperation){
					if(InsertTextOperation(e.operation).text==''||InsertTextOperation(e.operation).text==null){
						Alert.show(i18n._("GLOBAL_MAX_LENGHT@cannot exceed {1} characters","255"),i18n._("GLOBAL_INFO@Info"),Alert.OK,this);
					}
				}
			}


			protected function commandText_keyDownHandler(event:KeyboardEvent):void
			{
				var source:TextArea = event.currentTarget as TextArea;
				if(event.charCode==Keyboard.ENTER && ((source.text.length+1)>255)){
					Alert.show(i18n._("GLOBAL_MAX_LENGHT@cannot exceed {1} characters","255"),i18n._("GLOBAL_INFO@Info"),Alert.OK,this);
				}
				
			}

		]]>
	</mx:Script>
	<mx:Style source="styles.css"/>
	<mx:Canvas styleName="main" left="0" top="0" width="400" height="270" right="0" bottom="0">
		<control:TitleBar title="{titleWindow}"/>
		<mx:VBox top="32" left="16" right="16">
			<s:TextArea id="commandText" height="200" maxChars="255" width="100%" text="{sourceText}" changing="commandText_changingHandler(event)" keyDown="commandText_keyDownHandler(event)"/>
			<mx:HBox id="hboxButtonbar" horizontalAlign="right" width="100%" />
		</mx:VBox>
	</mx:Canvas>
</mx:Window>

<?xml version="1.0" encoding="utf-8"?>
<mx:Window xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:control="gadget.control.*"
		   resizable="false"
		   width="450" height="280" verticalAlign="middle"
		   showFlexChrome="false" transparent="true" systemChrome="none"
		   creationComplete="init();"
		   >
	<mx:Script>
		<![CDATA[
			import gadget.dao.Database;
			import gadget.util.StringUtils;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.utils.StringUtil;
			
			public var displayMainWindowAndInitDB:Function;
			public var appInfo:Object;
			public var messageInfo:String;
			public var crmGadget:CRMGadget;
			
			private function init():void {
				var appName:String = appInfo.name;
				this.title = appName;
				idTitleBar.title = appName;
				txtDisplayInfo.text = appName + " uses an encrypted database stored on your local file system to allow you to work" + 
					"offline securely. An encrypted database already exists. Please enter your password below."
				txtPassword.setFocus();
				if(!StringUtils.isEmpty(messageInfo)){
					txtDisplayError.text = messageInfo;
					txtDisplayError.visible = true;
				}
			}
			
			private function deleteOldDB():void {
				var ENCRYPT_DB_FILE:File = File.applicationDirectory.resolvePath(Database.getCustomDatabasePathFromFile() + "/" + Database.ENCRYPTED_DB_NAME);
				if(ENCRYPT_DB_FILE.exists){
					Alert.show('Are you sure you want to initialize new database? \nYou will loose your local data.',"Initialize New Database", Alert.YES|Alert.NO, this, function(event:CloseEvent):void{
						if (event.detail==Alert.YES){
							ENCRYPT_DB_FILE.deleteFile();
							afterDeleteDB();
						}    	 
					});	
				}		
			}
			private function afterDeleteDB():void {
				Alert.show("Database has been deleted successfully.\nThe Application will be restart." , "Delete Succeed", Alert.OK, this,function(event:CloseEvent):void{
					close();
					crmGadget.init();
				});
			}
			private function validatePassword():void {
				try{
					if(StringUtils.isEmpty(txtPassword.text)){
						txtDisplayError.text = "Please Enter your password.";
						txtDisplayError.visible = true;
						return;
					}
					displayMainWindowAndInitDB(Database.ENCRYPTED_DB_NAME, txtPassword.text);
					this.close();
				}catch(e:Error){
					//txtDisplayError.text = "Invalid password.";
					//txtDisplayError.visible = true;
					this.close();
					return;
				}
			}
			
			private function keyPressHandler(event:KeyboardEvent):void {
				if( event.keyCode == Keyboard.ENTER ) validatePassword();
			};
			
		]]>
	</mx:Script>	
	<mx:Style source="styles.css"/>
	<mx:Canvas styleName="main" left="0" top="0" width="450" height="280" right="0" bottom="0">
		<control:TitleBar id="idTitleBar" icon="@Embed(source='/assets/key.png')" exitApplication="true"/>
		<mx:VBox horizontalAlign="center" top="30" width="100%" height="100%">			
			<mx:Label fontSize="20" fontWeight="bold" text="Access Encrypted Database"/>
			<mx:Text id="txtDisplayInfo" width="100%" paddingLeft="15" paddingRight="15" color="0x323232"/>
			<mx:Form>
				<mx:FormItem label="Enter your password">
					<mx:TextInput displayAsPassword="true" id="txtPassword" keyDown="keyPressHandler(event);"/>
				</mx:FormItem>		
			</mx:Form>
			<mx:HBox>
				<mx:Button label="Validate Password" height="30" cornerRadius="2" click="validatePassword()"/>
				<mx:Button label="Initialize New DB" height="30" cornerRadius="2" click="deleteOldDB()"/>
			</mx:HBox>
			<mx:Text id="txtDisplayError" width="90%" height="35" visible="false" color="0xFF0000" textAlign="center"/>
		</mx:VBox>
	</mx:Canvas>
</mx:Window>